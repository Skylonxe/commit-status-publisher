/*
 * Copyright 2000-2021 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

ext {
  pluginVersion = project.hasProperty("PluginVersion") ? "$PluginVersion"
                                                         : "2020.2.2-SNAPSHOT"
  teamcityVersion = project.hasProperty("TeamCityVersion") ? "$TeamCityVersion"
                                                           : "2020.2.2-SNAPSHOT"
  teamcityLibs = project.hasProperty("TeamCityLibs") ? "$TeamCityLibs"
      : "E:/Servers/TeamCity/PluginDev/webapps/ROOT/WEB-INF/lib"
  teamcityTestLibs = project.hasProperty("TeamCityTestLibs") ? "$TeamCityTestLibs"
      : "E:/Servers/TeamCity/PluginDev/devPackage/tests"
}

allprojects {
  apply plugin: 'java'

  group = 'org.jetbrains.teamcity'
  version = "$rootProject.ext.pluginVersion"

  clean {
    delete "target"
  }
}

subprojects {

    apply plugin: 'java'

    repositories {
        mavenLocal()
        maven {
            url = 'https://download.jetbrains.com/teamcity-repository'
        }

        maven {
            url = 'https://repo.maven.apache.org/maven2'
        }
    }

    sourceCompatibility = '1.8'
}

task copyDependencies(type: Copy, dependsOn:  ':commit-status-publisher-server:jar') {
  project(':commit-status-publisher-server').configurations.getAt("runtime").setCanBeResolved(true)
  println("implementation canBeResolved change to ï¼š"+project(':commit-status-publisher-server').configurations.getAt("runtime").canBeResolved)
  from project(':commit-status-publisher-server').configurations.getAt("runtime")
  include 'jsch*.jar'
  into './build/dependencies'
}


task copyPluginFiles(type: Copy, dependsOn:  ':commit-status-publisher-server:jar') {
  from '.'
  include 'teamcity-plugin.xml'
  into './build/plugin-files'
  expand(PluginVersion: "$rootProject.ext.pluginVersion")
}

task zipPlugin(type: Zip, dependsOn: ['copyDependencies', 'copyPluginFiles']) {
  destinationDir = new File(rootDir, './target')
  into('server') {
    from project(':commit-status-publisher-server').configurations.runtime.allArtifacts.files
    include '*'
    from './build/dependencies'
    include '*'
  }
  into('kotlin-dsl') {
    from 'kotlin-dsl'
    include 'CommitStatusPublisher.xml'
  }
  from './build/plugin-files'
  include 'teamcity-plugin.xml'

  archiveName = 'commit-status-publisher.zip'
}

build.dependsOn zipPlugin